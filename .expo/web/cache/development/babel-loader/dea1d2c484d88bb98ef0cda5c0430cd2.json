{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Duarte\\\\react-native-navigation\\\\src\\\\Manual.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as firebase from 'firebase';\nimport { db } from \"./constants/ApiKeys\";\n\nvar Manual = function (_React$Component) {\n  _inherits(Manual, _React$Component);\n\n  function Manual(props) {\n    var _this;\n\n    _classCallCheck(this, Manual);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Manual).call(this, props));\n    _this.state = {\n      TextInputValue: ''\n    };\n    return _this;\n  }\n\n  _createClass(Manual, [{\n    key: \"fetchInfo\",\n    value: function fetchInfo() {\n      var _this2 = this;\n\n      if (this.state.TextInputValue !== '' && this.state.TextInputValue !== null) {\n        db.ref(\"codigos/\" + this.state.TextInputValue).on('value', function (snapshot) {\n          if (snapshot.exists() && snapshot.val() !== null) {\n            code = snapshot.val().codigo;\n            Alert.alert('Found', \"Bar code: \" + _this2.state.TextInputValue + \" \\nCode: \" + code);\n          } else {\n            Alert.alert('Not Found', \"Bar code: \" + _this2.state.TextInputValue + \"\\nCode:  Not Found\");\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props$navigatio = this.props.navigation,\n          navigate = _this$props$navigatio.navigate,\n          state = _this$props$navigatio.state;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          height: 45,\n          width: \"95%\",\n          borderColor: \"gray\",\n          textAlign: \"center\",\n          color: \"#00FFFF\",\n          textTransform: \"uppercase\"\n        },\n        autoCapitalize: \"characters\",\n        placeholder: \" Enter Code Number\",\n        onChangeText: function onChangeText(TextInputValue) {\n          return _this3.setState({\n            TextInputValue: TextInputValue\n          });\n        },\n        underlineColorAndroid: \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        }\n      }), React.createElement(View, {\n        style: [{\n          width: \"50%\",\n          margin: 15\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          return _this3.fetchInfo();\n        },\n        title: \"Search\",\n        style: {\n          textColor: '00FFFF'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        }\n      })));\n    }\n  }]);\n\n  return Manual;\n}(React.Component);\n\nManual.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    title: '',\n    headerStyle: {\n      backgroundColor: '#ffffff'\n    },\n    headerTintColor: '#00B0FF'\n  };\n};\n\nexport { Manual as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: '#000'\n  },\n  headerText: {\n    fontSize: 20,\n    textAlign: \"center\",\n    margin: 10,\n    fontWeight: \"bold\",\n    color: '#00FFFF'\n  }\n});","map":{"version":3,"sources":["C:/Users/Duarte/react-native-navigation/src/Manual.js"],"names":["React","firebase","db","Manual","props","state","TextInputValue","ref","on","snapshot","exists","val","code","codigo","Alert","alert","navigation","navigate","styles","container","height","width","borderColor","textAlign","color","textTransform","setState","margin","fetchInfo","textColor","Component","navigationOptions","title","headerStyle","backgroundColor","headerTintColor","StyleSheet","create","flex","justifyContent","alignItems","headerText","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Text, Button, TextInput, Alert } from 'react-native';\r\nimport * as firebase from 'firebase';\r\nimport { db } from './constants/ApiKeys';\r\n\r\nexport default class Manual extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      TextInputValue: ''\r\n    }\r\n  }\r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      title: '',\r\n      headerStyle: {\r\n        backgroundColor: '#ffffff',\r\n      },\r\n      headerTintColor: '#00B0FF',\r\n    };\r\n  };\r\n\r\n  fetchInfo() {\r\n    if (this.state.TextInputValue !== '' && this.state.TextInputValue !== null) {\r\n      db.ref(`codigos/${this.state.TextInputValue}`).on('value', (snapshot) => {\r\n        if (snapshot.exists() && snapshot.val() !== null) {\r\n          code = snapshot.val().codigo;\r\n          Alert.alert('Found', `Bar code: ${this.state.TextInputValue} \\nCode: ${code}`);\r\n        }\r\n        else {\r\n          Alert.alert('Not Found', `Bar code: ${this.state.TextInputValue}\\nCode:  Not Found`);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { navigate, state } = this.props.navigation;\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n\r\n        <TextInput\r\n          style={{ height: 45, width: \"95%\", borderColor: \"gray\", textAlign: \"center\", color: \"#00FFFF\", textTransform: \"uppercase\"}}\r\n          autoCapitalize=\"characters\"\r\n          // Adding hint in TextInput using Placeholder option.\r\n          placeholder=\" Enter Code Number\"\r\n          //set the value in state.\r\n          onChangeText={TextInputValue => this.setState({ TextInputValue })}\r\n          // Making the Under line Transparent.\r\n          underlineColorAndroid=\"transparent\"\r\n        />\r\n\r\n        <View style={[{ width: \"50%\", margin: 15}]}>\r\n          <Button\r\n            onPress={() => this.fetchInfo()}\r\n            title=\"Search\"\r\n            style={{textColor: '00FFFF'}}\r\n          />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: '#000',\r\n  },\r\n  headerText: {\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    margin: 10,\r\n    fontWeight: \"bold\",\r\n    color: '#00FFFF',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}