{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Duarte\\\\react-native-navigation\\\\src\\\\Scanner.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { Camera } from 'expo-camera';\nimport { db } from \"./constants/ApiKeys\";\nexport default function App() {\n  App.navigationOptions = {\n    headerShown: false\n  };\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    })();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref) {\n    var type = _ref.type,\n        data = _ref.data;\n    setScanned(true);\n\n    if (data !== '' && data !== null) {\n      db.ref(\"codigos/\" + data).on('value', function (snapshot) {\n        if (snapshot.exists() && snapshot.val() !== null) {\n          code = snapshot.val().codigo;\n          Alert.alert('Found', \"Bar code: \" + data + \" \\nCode: \" + code);\n        } else {\n          Alert.alert('Not Found', \"Bar code: \" + data + \"\\nCode: Not Found\");\n        }\n      });\n    }\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      }\n    }, \"Requesting for camera permission\");\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'flex-end'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    }\n  }, React.createElement(Camera, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: [StyleSheet.absoluteFillObject, styles.container],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    }\n  }, React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    }\n  }, \"Scan Barcode\"), React.createElement(View, {\n    style: styles.layerTop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    }\n  }), React.createElement(View, {\n    style: styles.layerCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    }\n  }, React.createElement(View, {\n    style: styles.layerLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    }\n  }), React.createElement(View, {\n    style: styles.focused,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    }\n  }), React.createElement(View, {\n    style: styles.layerRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    }\n  })), React.createElement(View, {\n    style: styles.layerBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    }\n  }, React.createElement(Text, {\n    onPress: function onPress() {\n      return navigate('Home');\n    },\n    style: styles.cancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    }\n  }, \"Cancel\"))), scanned && React.createElement(Button, {\n    title: 'Tap to Scan Again',\n    onPress: function onPress() {\n      return setScanned(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    }\n  }));\n}\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar qrSize = width * 0.7;\nvar opacity = 'rgba(0, 0, 0, .6)';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  layerTop: {\n    flex: 1,\n    backgroundColor: opacity\n  },\n  layerCenter: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  layerLeft: {\n    flex: 1,\n    backgroundColor: opacity\n  },\n  focused: {\n    flex: 10\n  },\n  layerRight: {\n    flex: 1,\n    backgroundColor: opacity\n  },\n  layerBottom: {\n    flex: 3,\n    backgroundColor: opacity\n  },\n  description: {\n    fontSize: width * 0.09,\n    paddingTop: '37%',\n    textAlign: 'center',\n    color: 'white',\n    backgroundColor: opacity\n  },\n  cancel: {\n    fontSize: width * 0.05,\n    textAlign: 'center',\n    color: 'white',\n    marginTop: '20%'\n  }\n});","map":{"version":3,"sources":["C:/Users/Duarte/react-native-navigation/src/Scanner.js"],"names":["React","useState","useEffect","BarCodeScanner","Camera","db","App","navigationOptions","headerShown","hasPermission","setHasPermission","scanned","setScanned","requestPermissionsAsync","status","handleBarCodeScanned","type","data","ref","on","snapshot","exists","val","code","codigo","Alert","alert","flex","flexDirection","justifyContent","undefined","StyleSheet","absoluteFillObject","styles","container","description","layerTop","layerCenter","layerLeft","focused","layerRight","layerBottom","navigate","cancel","Dimensions","get","width","qrSize","opacity","create","backgroundColor","fontSize","paddingTop","textAlign","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Text, View, StyleSheet, Button, Alert, Dimensions } from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport { Camera } from 'expo-camera';\r\nimport { db } from './constants/ApiKeys';\r\n\r\nexport default function App() {\r\n  App.navigationOptions = {\r\n    headerShown: false,\r\n  }\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n  \r\n  \r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    })();\r\n  }, []);\r\n  \r\n\r\n  const handleBarCodeScanned = ({ type, data }) => {\r\n    setScanned(true);\r\n    // Fazer ligacao a BD e dizer o codigo\r\n    if (data !== '' && data !== null) {\r\n      db.ref(`codigos/${data}`).on('value', (snapshot) => {\r\n        if (snapshot.exists() && snapshot.val() !== null) {\r\n          code = snapshot.val().codigo;\r\n          Alert.alert('Found', `Bar code: ${data} \\nCode: ${code}`);\r\n        }\r\n        else {\r\n          Alert.alert('Not Found', `Bar code: ${data}\\nCode: Not Found`);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  if (hasPermission === null) {\r\n    return <Text>Requesting for camera permission</Text>;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-end',\r\n      }}>\r\n      <Camera\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={[StyleSheet.absoluteFillObject, styles.container]}\r\n      >\r\n        <Text style={styles.description}>Scan Barcode</Text>\r\n        <View style={styles.layerTop} />\r\n        <View style={styles.layerCenter}>\r\n          <View style={styles.layerLeft} />\r\n          <View style={styles.focused} />\r\n          <View style={styles.layerRight} />\r\n        </View>\r\n        <View style={styles.layerBottom}>\r\n        <Text\r\n          onPress={() => navigate(\r\n            'Home'\r\n        )}\r\n          style={styles.cancel}>\r\n          Cancel\r\n        </Text>\r\n        </View>\r\n      </Camera>\r\n      {scanned && <Button title={'Tap to Scan Again'} onPress={() => setScanned(false)} />}\r\n    </View>\r\n  );\r\n}\r\nconst { width } = Dimensions.get('window')\r\nconst qrSize = width * 0.7\r\nconst opacity = 'rgba(0, 0, 0, .6)';\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n  },\r\n  layerTop: {\r\n    flex: 1,\r\n    backgroundColor: opacity\r\n  },\r\n  layerCenter: {\r\n    flex: 1,\r\n    flexDirection: 'row'\r\n  },\r\n  layerLeft: {\r\n    flex: 1,\r\n    backgroundColor: opacity\r\n  },\r\n  focused: {\r\n    flex: 10\r\n  },\r\n  layerRight: {\r\n    flex: 1,\r\n    backgroundColor: opacity\r\n  },\r\n  layerBottom: {\r\n    flex: 3,\r\n    backgroundColor: opacity\r\n  },\r\n  description: {\r\n    fontSize: width * 0.09,\r\n    paddingTop: '37%',\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    backgroundColor: opacity\r\n  },\r\n  cancel: {\r\n    fontSize: width * 0.05,\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    marginTop: '20%',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}