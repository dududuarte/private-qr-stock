{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Duarte\\\\react-native-navigation\\\\src\\\\Scanner.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { Camera } from 'expo-camera';\nimport { db } from \"./constants/ApiKeys\";\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    })();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref) {\n    var type = _ref.type,\n        data = _ref.data;\n    setScanned(true);\n    db.ref(\"codigos/\" + data).get('value', function (snapshot) {\n      if (snapshot.exists() && snapshot.val() !== null) {\n        alert(snapshot.val());\n        code = snapshot.val().codigo;\n        console.log(code);\n        Alert.alert(\"Found\", \"Bar code: \" + data + \" \\nCode: \" + code);\n      } else {\n        alert(\"Not Found\", \"Bar code: \" + data + \" \\nCode: Not Found\");\n      }\n    });\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      }\n    }, \"Requesting for camera permission\");\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'flex-end'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    }\n  }, React.createElement(Camera, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: StyleSheet.absoluteFillObject,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    }\n  }), scanned && React.createElement(Button, {\n    title: 'Tap to Scan Again',\n    onPress: function onPress() {\n      return setScanned(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Duarte/react-native-navigation/src/Scanner.js"],"names":["React","useState","useEffect","BarCodeScanner","Camera","db","App","hasPermission","setHasPermission","scanned","setScanned","requestPermissionsAsync","status","handleBarCodeScanned","type","data","ref","get","snapshot","exists","val","alert","code","codigo","console","log","Alert","flex","flexDirection","justifyContent","undefined","StyleSheet","absoluteFillObject"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAAQC,EAAR;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACcL,QAAQ,CAAC,IAAD,CADtB;AAAA;AAAA,MACrBM,aADqB;AAAA,MACNC,gBADM;;AAAA,mBAEEP,QAAQ,CAAC,KAAD,CAFV;AAAA;AAAA,MAErBQ,OAFqB;AAAA,MAEZC,UAFY;;AAI5BR,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC0BC,cAAc,CAACQ,uBAAf,EAD1B;;AAAA;AAAA;AACSC,cAAAA,MADT,yBACSA,MADT;AAECJ,cAAAA,gBAAgB,CAACI,MAAM,KAAK,SAAZ,CAAhB;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAoB;AAAA,QAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC/CL,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEFL,IAAAA,EAAE,CAACW,GAAH,cAAkBD,IAAlB,EAA0BE,GAA1B,CAA8B,OAA9B,EAAuC,UAACC,QAAD,EAAc;AACnD,UAAGA,QAAQ,CAACC,MAAT,MAAqBD,QAAQ,CAACE,GAAT,OAAmB,IAA3C,EAAgD;AAEhDC,QAAAA,KAAK,CAACH,QAAQ,CAACE,GAAT,EAAD,CAAL;AACAE,QAAAA,IAAI,GAAGJ,QAAQ,CAACE,GAAT,GAAeG,MAAtB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAI,QAAAA,KAAK,CAACL,KAAN,CAAY,OAAZ,iBAAkCN,IAAlC,iBAAkDO,IAAlD;AACH,OANG,MAOA;AACFD,QAAAA,KAAK,CAAC,WAAD,iBAA2BN,IAA3B,wBAAL;AACD;AACA,KAXC;AAYC,GAfD;;AAkBA,MAAIR,aAAa,KAAK,IAAtB,EAA4B;AAC1B,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAP;AACD;;AACD,MAAIA,aAAa,KAAK,KAAtB,EAA6B;AAC3B,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD;;AAED,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLoB,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,aAAa,EAAE,QAFV;AAGLC,MAAAA,cAAc,EAAE;AAHX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,MAAD;AACE,IAAA,gBAAgB,EAAEpB,OAAO,GAAGqB,SAAH,GAAejB,oBAD1C;AAEE,IAAA,KAAK,EAAEkB,UAAU,CAACC,kBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWGvB,OAAO,IAAI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,mBAAf;AAAoC,IAAA,OAAO,EAAE;AAAA,aAAMC,UAAU,CAAC,KAAD,CAAhB;AAAA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,IAXd,CADF;AAeD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Text, View, StyleSheet, Button, Alert } from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport { Camera } from 'expo-camera';\r\nimport {db} from './constants/ApiKeys';\r\n\r\nexport default function App() {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    })();\r\n  }, []);\r\n\r\n  const handleBarCodeScanned = ({ type, data }) => {\r\n    setScanned(true);\r\n    // Fazer ligacao a BD e dizer o codigo\r\n  db.ref(`codigos/${data}`).get('value', (snapshot) => {\r\n    if(snapshot.exists() && snapshot.val() !== null){\r\n    \r\n    alert(snapshot.val());\r\n    code = snapshot.val().codigo;\r\n    console.log(code);\r\n    Alert.alert(\"Found\", `Bar code: ${data} \\nCode: ${code}`);\r\n}\r\nelse{\r\n  alert(\"Not Found\", `Bar code: ${data} \\nCode: Not Found`);\r\n}\r\n});\r\n  }\r\n\r\n\r\n  if (hasPermission === null) {\r\n    return <Text>Requesting for camera permission</Text>;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-end',\r\n      }}>\r\n      <Camera\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={StyleSheet.absoluteFillObject}\r\n      />\r\n\r\n      {scanned && <Button title={'Tap to Scan Again'} onPress={() => setScanned(false)} />}\r\n    </View>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}