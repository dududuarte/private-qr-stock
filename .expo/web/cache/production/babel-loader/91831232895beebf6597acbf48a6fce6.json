{"ast":null,"code":"var _jsxFileName=\"/Users/satya/Workspace/Callstack/react-navigation-stack/src/vendor/views/Stack/CardContainer.tsx\";import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Card from\"./Card\";import useTheme from\"../../../utils/useTheme\";export default function CardContainer(_ref){var active=_ref.active,cardOverlayEnabled=_ref.cardOverlayEnabled,cardShadowEnabled=_ref.cardShadowEnabled,cardStyle=_ref.cardStyle,cardStyleInterpolator=_ref.cardStyleInterpolator,closing=_ref.closing,gesture=_ref.gesture,floatingHeaderHeight=_ref.floatingHeaderHeight,focused=_ref.focused,gestureDirection=_ref.gestureDirection,gestureEnabled=_ref.gestureEnabled,gestureResponseDistance=_ref.gestureResponseDistance,gestureVelocityImpact=_ref.gestureVelocityImpact,getPreviousRoute=_ref.getPreviousRoute,headerMode=_ref.headerMode,headerShown=_ref.headerShown,headerStyleInterpolator=_ref.headerStyleInterpolator,headerTransparent=_ref.headerTransparent,index=_ref.index,layout=_ref.layout,onCloseRoute=_ref.onCloseRoute,onOpenRoute=_ref.onOpenRoute,onPageChangeCancel=_ref.onPageChangeCancel,onPageChangeConfirm=_ref.onPageChangeConfirm,onPageChangeStart=_ref.onPageChangeStart,onTransitionEnd=_ref.onTransitionEnd,onTransitionStart=_ref.onTransitionStart,previousScene=_ref.previousScene,renderHeader=_ref.renderHeader,renderScene=_ref.renderScene,safeAreaInsetBottom=_ref.safeAreaInsetBottom,safeAreaInsetLeft=_ref.safeAreaInsetLeft,safeAreaInsetRight=_ref.safeAreaInsetRight,safeAreaInsetTop=_ref.safeAreaInsetTop,scene=_ref.scene,state=_ref.state,transitionSpec=_ref.transitionSpec;var handleOpen=function handleOpen(){onTransitionEnd==null?void 0:onTransitionEnd({route:scene.route},false);onOpenRoute({route:scene.route});};var handleClose=function handleClose(){onTransitionEnd==null?void 0:onTransitionEnd({route:scene.route},true);onCloseRoute({route:scene.route});};var handleTransitionStart=function handleTransitionStart(_ref2){var closing=_ref2.closing;if(closing){onPageChangeConfirm==null?void 0:onPageChangeConfirm();}else{onPageChangeCancel==null?void 0:onPageChangeCancel();}onTransitionStart==null?void 0:onTransitionStart({route:scene.route},closing);};var insets={top:safeAreaInsetTop,right:safeAreaInsetRight,bottom:safeAreaInsetBottom,left:safeAreaInsetLeft};var _useTheme=useTheme(),colors=_useTheme.colors;return React.createElement(Card,{index:index,active:active,gestureDirection:gestureDirection,layout:layout,insets:insets,gesture:gesture,current:scene.progress.current,next:scene.progress.next,closing:closing,onOpen:handleOpen,onClose:handleClose,overlayEnabled:cardOverlayEnabled,shadowEnabled:cardShadowEnabled,onTransitionStart:handleTransitionStart,onGestureBegin:onPageChangeStart,onGestureCanceled:onPageChangeCancel,gestureEnabled:gestureEnabled,gestureResponseDistance:gestureResponseDistance,gestureVelocityImpact:gestureVelocityImpact,transitionSpec:transitionSpec,styleInterpolator:cardStyleInterpolator,accessibilityElementsHidden:!focused,importantForAccessibility:focused?'auto':'no-hide-descendants',pointerEvents:\"box-none\",containerStyle:headerMode==='float'&&!headerTransparent&&headerShown!==false?{marginTop:floatingHeaderHeight}:null,contentStyle:[{backgroundColor:colors.background},cardStyle],style:StyleSheet.absoluteFill,__source:{fileName:_jsxFileName,lineNumber:128}},React.createElement(View,{style:styles.container,__source:{fileName:_jsxFileName,lineNumber:161}},React.createElement(View,{style:styles.scene,__source:{fileName:_jsxFileName,lineNumber:162}},renderScene({route:scene.route})),headerMode==='screen'?renderHeader({mode:'screen',layout:layout,insets:insets,scenes:[previousScene,scene],state:state,getPreviousRoute:getPreviousRoute,styleInterpolator:headerStyleInterpolator}):null));}var styles=StyleSheet.create({container:{flex:1,flexDirection:'column-reverse'},scene:{flex:1}});","map":{"version":3,"sources":["CardContainer.tsx"],"names":["active","cardOverlayEnabled","cardShadowEnabled","cardStyle","cardStyleInterpolator","closing","gesture","floatingHeaderHeight","focused","gestureDirection","gestureEnabled","gestureResponseDistance","gestureVelocityImpact","getPreviousRoute","headerMode","headerShown","headerStyleInterpolator","headerTransparent","index","layout","onCloseRoute","onOpenRoute","onPageChangeCancel","onPageChangeConfirm","onPageChangeStart","onTransitionEnd","onTransitionStart","previousScene","renderHeader","renderScene","safeAreaInsetBottom","safeAreaInsetLeft","safeAreaInsetRight","safeAreaInsetTop","scene","state","transitionSpec","handleOpen","route","handleClose","handleTransitionStart","insets","top","right","bottom","left","colors","useTheme","marginTop","backgroundColor","StyleSheet","styles","mode","scenes","styleInterpolator","container","flex","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport { NavigationState as StackNavigationState } from 'react-navigation';\nimport { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport Card from './Card';\nimport useTheme from '../../../utils/useTheme';\nimport {\n  Route,\n  Scene,\n  Layout,\n  StackHeaderMode,\n  TransitionPreset,\n} from '../../types';\n\ntype Props = TransitionPreset & {\n  index: number;\n  active: boolean;\n  focused: boolean;\n  closing: boolean;\n  layout: Layout;\n  gesture: Animated.Value;\n  previousScene?: Scene<Route<string>>;\n  scene: Scene<Route<string>>;\n  state: StackNavigationState;\n  safeAreaInsetTop: number;\n  safeAreaInsetRight: number;\n  safeAreaInsetBottom: number;\n  safeAreaInsetLeft: number;\n  cardOverlayEnabled?: boolean;\n  cardShadowEnabled?: boolean;\n  cardStyle?: StyleProp<ViewStyle>;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  onTransitionStart?: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd?: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n  gestureEnabled?: boolean;\n  gestureResponseDistance?: {\n    vertical?: number;\n    horizontal?: number;\n  };\n  gestureVelocityImpact?: number;\n  headerMode: StackHeaderMode;\n  headerShown?: boolean;\n  headerTransparent?: boolean;\n  floatingHeaderHeight: number;\n};\n\nexport default function CardContainer({\n  active,\n  cardOverlayEnabled,\n  cardShadowEnabled,\n  cardStyle,\n  cardStyleInterpolator,\n  closing,\n  gesture,\n  floatingHeaderHeight,\n  focused,\n  gestureDirection,\n  gestureEnabled,\n  gestureResponseDistance,\n  gestureVelocityImpact,\n  getPreviousRoute,\n  headerMode,\n  headerShown,\n  headerStyleInterpolator,\n  headerTransparent,\n  index,\n  layout,\n  onCloseRoute,\n  onOpenRoute,\n  onPageChangeCancel,\n  onPageChangeConfirm,\n  onPageChangeStart,\n  onTransitionEnd,\n  onTransitionStart,\n  previousScene,\n  renderHeader,\n  renderScene,\n  safeAreaInsetBottom,\n  safeAreaInsetLeft,\n  safeAreaInsetRight,\n  safeAreaInsetTop,\n  scene,\n  state,\n  transitionSpec,\n}: Props) {\n  const handleOpen = () => {\n    onTransitionEnd?.({ route: scene.route }, false);\n    onOpenRoute({ route: scene.route });\n  };\n\n  const handleClose = () => {\n    onTransitionEnd?.({ route: scene.route }, true);\n    onCloseRoute({ route: scene.route });\n  };\n\n  const handleTransitionStart = ({ closing }: { closing: boolean }) => {\n    if (closing) {\n      onPageChangeConfirm?.();\n    } else {\n      onPageChangeCancel?.();\n    }\n\n    onTransitionStart?.({ route: scene.route }, closing);\n  };\n\n  const insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft,\n  };\n\n  const { colors } = useTheme();\n\n  return (\n    <Card\n      index={index}\n      active={active}\n      gestureDirection={gestureDirection}\n      layout={layout}\n      insets={insets}\n      gesture={gesture}\n      current={scene.progress.current}\n      next={scene.progress.next}\n      closing={closing}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      overlayEnabled={cardOverlayEnabled}\n      shadowEnabled={cardShadowEnabled}\n      onTransitionStart={handleTransitionStart}\n      onGestureBegin={onPageChangeStart}\n      onGestureCanceled={onPageChangeCancel}\n      gestureEnabled={gestureEnabled}\n      gestureResponseDistance={gestureResponseDistance}\n      gestureVelocityImpact={gestureVelocityImpact}\n      transitionSpec={transitionSpec}\n      styleInterpolator={cardStyleInterpolator}\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      pointerEvents=\"box-none\"\n      containerStyle={\n        headerMode === 'float' && !headerTransparent && headerShown !== false\n          ? { marginTop: floatingHeaderHeight }\n          : null\n      }\n      contentStyle={[{ backgroundColor: colors.background }, cardStyle]}\n      style={StyleSheet.absoluteFill}\n    >\n      <View style={styles.container}>\n        <View style={styles.scene}>{renderScene({ route: scene.route })}</View>\n        {headerMode === 'screen'\n          ? renderHeader({\n              mode: 'screen',\n              layout,\n              insets,\n              scenes: [previousScene, scene],\n              state,\n              getPreviousRoute,\n              styleInterpolator: headerStyleInterpolator,\n            })\n          : null}\n      </View>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  scene: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}