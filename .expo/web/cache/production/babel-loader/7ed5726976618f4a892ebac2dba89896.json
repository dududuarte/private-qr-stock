{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Alert from\"react-native-web/dist/exports/Alert\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Text from\"react-native-web/dist/exports/Text\";import{db}from\"./constants/ApiKeys\";var Manual=function(_React$Component){_inherits(Manual,_React$Component);function Manual(props){var _this;_classCallCheck(this,Manual);_this=_possibleConstructorReturn(this,_getPrototypeOf(Manual).call(this,props));_this.state={TextInputValue:''};return _this;}_createClass(Manual,[{key:\"fetchInfo\",value:function fetchInfo(){var _this2=this;if(this.state.TextInputValue!==''&&this.state.TextInputValue!==null){db.ref(\"codigos/\"+this.state.TextInputValue).on('value',function(snapshot){if(snapshot.exists()&&snapshot.val()!==null){code=snapshot.val().codigo;Alert.alert('Found',\"Bar code: \"+_this2.state.TextInputValue+\" \\nCode: \"+code);}else{Alert.alert('Not Found',\"Bar code: \"+_this2.state.TextInputValue+\"\\nCode:  Not Found\");}});}}},{key:\"render\",value:function render(){var _this3=this;var _this$props$navigatio=this.props.navigation,navigate=_this$props$navigatio.navigate,state=_this$props$navigatio.state;return React.createElement(View,{style:styles.container},React.createElement(TextInput,{style:{height:45,borderColor:\"gray\",textAlign:\"center\",color:\"#00FFFF\",textTransform:\"uppercase\"},autoCapitalize:\"characters\",placeholder:\"Enter Code Number\",onChangeText:function onChangeText(TextInputValue){return _this3.setState({TextInputValue:TextInputValue});},underlineColorAndroid:\"transparent\"}),React.createElement(View,{style:[{margin:15}]},React.createElement(TouchableOpacity,{style:styles.button,onPress:function onPress(){return _this3.fetchInfo();}},React.createElement(Text,{style:{color:'#fff'}},\"Search\"))));}}]);return Manual;}(React.Component);Manual.navigationOptions=function(_ref){var navigation=_ref.navigation;return{title:'',headerStyle:{backgroundColor:'#000'},headerTintColor:'#00B0FF'};};export{Manual as default};var styles=StyleSheet.create({container:{flex:1,justifyContent:\"center\",alignItems:\"center\",backgroundColor:'#000'},headerText:{fontSize:20,textAlign:\"center\",margin:10,fontWeight:\"bold\",color:'#00FFFF'},button:{borderWidth:1,borderColor:'rgba(0,0,0,0.6)',alignItems:'center',justifyContent:'center',width:200,height:40,backgroundColor:'#201f1f',borderRadius:20}});","map":{"version":3,"sources":["C:/Users/Duarte/react-native-navigation/src/Manual.js"],"names":["React","db","Manual","props","state","TextInputValue","ref","on","snapshot","exists","val","code","codigo","Alert","alert","navigation","navigate","styles","container","height","borderColor","textAlign","color","textTransform","setState","margin","button","fetchInfo","Component","navigationOptions","title","headerStyle","backgroundColor","headerTintColor","StyleSheet","create","flex","justifyContent","alignItems","headerText","fontSize","fontWeight","borderWidth","width","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, TextInput, Alert, TouchableOpacity, Text } from 'react-native';\r\nimport { db } from './constants/ApiKeys';\r\n\r\nexport default class Manual extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      TextInputValue: ''\r\n    }\r\n  }\r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      title: '',\r\n      headerStyle: {\r\n        backgroundColor: '#000',\r\n      },\r\n      headerTintColor: '#00B0FF',\r\n    };\r\n  };\r\n\r\n  fetchInfo() {\r\n    if (this.state.TextInputValue !== '' && this.state.TextInputValue !== null) {\r\n      db.ref(`codigos/${this.state.TextInputValue}`).on('value', (snapshot) => {\r\n        if (snapshot.exists() && snapshot.val() !== null) {\r\n          code = snapshot.val().codigo;\r\n          Alert.alert('Found', `Bar code: ${this.state.TextInputValue} \\nCode: ${code}`);\r\n        }\r\n        else {\r\n          Alert.alert('Not Found', `Bar code: ${this.state.TextInputValue}\\nCode:  Not Found`);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { navigate, state } = this.props.navigation;\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <TextInput\r\n          style={{ height: 45, borderColor: \"gray\", textAlign: \"center\", color: \"#00FFFF\", textTransform: \"uppercase\"}}\r\n          autoCapitalize=\"characters\"\r\n          // Adding hint in TextInput using Placeholder option.\r\n          placeholder=\"Enter Code Number\"\r\n          //set the value in state.\r\n          onChangeText={TextInputValue => this.setState({ TextInputValue })}\r\n          // Making the Under line Transparent.\r\n          underlineColorAndroid=\"transparent\"\r\n        />\r\n        <View style={[{margin: 15}]}>\r\n        <TouchableOpacity\r\n                        style={styles.button}\r\n                        onPress={() => this.fetchInfo()}\r\n                    >\r\n                        <Text style={{color: '#fff'}}>Search</Text>\r\n                    </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: '#000',\r\n  },\r\n  headerText: {\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    margin: 10,\r\n    fontWeight: \"bold\",\r\n    color: '#00FFFF',\r\n  },\r\n  button: {\r\n    borderWidth: 1,\r\n    borderColor: 'rgba(0,0,0,0.6)',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: 200,\r\n    height: 40,\r\n    backgroundColor: '#201f1f',\r\n    borderRadius: 20,\r\n}\r\n});"]},"metadata":{},"sourceType":"module"}