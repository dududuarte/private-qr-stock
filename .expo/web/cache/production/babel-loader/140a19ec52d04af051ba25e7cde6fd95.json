{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{canGetUserMedia}from\"./CameraModule/UserMediaManager\";export default{get name(){return'ExponentCameraManager';},get Type(){return{back:'back',front:'front'};},get FlashMode(){return{on:'on',off:'off',auto:'auto',torch:'torch'};},get AutoFocus(){return{on:'on',off:'off',auto:'auto',singleShot:'singleShot'};},get WhiteBalance(){return{auto:'auto',continuous:'continuous',manual:'manual'};},get VideoQuality(){return{};},isAvailableAsync:function isAvailableAsync(){return _regeneratorRuntime.async(function isAvailableAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",canGetUserMedia());case 1:case\"end\":return _context.stop();}}});},takePicture:function takePicture(options,camera){return _regeneratorRuntime.async(function takePicture$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regeneratorRuntime.awrap(camera.takePicture(options));case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}});},pausePreview:function pausePreview(camera){return _regeneratorRuntime.async(function pausePreview$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return _regeneratorRuntime.awrap(camera.pausePreview());case 2:case\"end\":return _context3.stop();}}});},resumePreview:function resumePreview(camera){return _regeneratorRuntime.async(function resumePreview$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return _regeneratorRuntime.awrap(camera.resumePreview());case 2:return _context4.abrupt(\"return\",_context4.sent);case 3:case\"end\":return _context4.stop();}}});},getAvailableCameraTypesAsync:function getAvailableCameraTypesAsync(camera){return _regeneratorRuntime.async(function getAvailableCameraTypesAsync$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(canGetUserMedia()){_context5.next=2;break;}return _context5.abrupt(\"return\",[]);case 2:_context5.next=4;return _regeneratorRuntime.awrap(camera.getAvailableCameraTypesAsync());case 4:return _context5.abrupt(\"return\",_context5.sent);case 5:case\"end\":return _context5.stop();}}});},getAvailablePictureSizes:function getAvailablePictureSizes(ratio,camera){return _regeneratorRuntime.async(function getAvailablePictureSizes$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return _regeneratorRuntime.awrap(camera.getAvailablePictureSizes(ratio));case 2:return _context6.abrupt(\"return\",_context6.sent);case 3:case\"end\":return _context6.stop();}}});}};","map":{"version":3,"sources":["../src/ExponentCameraManager.web.ts"],"names":[],"mappings":"4DAEA,OAAS,eAAT,uCAEA,cAAe,CACb,GAAI,CAAA,IAAJ,EAAQ,CACN,MAAO,uBAAP,CACD,CAHY,CAIb,GAAI,CAAA,IAAJ,EAAQ,CACN,MAAO,CACL,IAAI,CAAE,MADD,CAEL,KAAK,CAAE,OAFF,CAAP,CAID,CATY,CAUb,GAAI,CAAA,SAAJ,EAAa,CACX,MAAO,CACL,EAAE,CAAE,IADC,CAEL,GAAG,CAAE,KAFA,CAGL,IAAI,CAAE,MAHD,CAIL,KAAK,CAAE,OAJF,CAAP,CAMD,CAjBY,CAkBb,GAAI,CAAA,SAAJ,EAAa,CACX,MAAO,CACL,EAAE,CAAE,IADC,CAEL,GAAG,CAAE,KAFA,CAGL,IAAI,CAAE,MAHD,CAIL,UAAU,CAAE,YAJP,CAAP,CAMD,CAzBY,CA0Bb,GAAI,CAAA,YAAJ,EAAgB,CACd,MAAO,CACL,IAAI,CAAE,MADD,CAEL,UAAU,CAAE,YAFP,CAGL,MAAM,CAAE,QAHH,CAAP,CAKD,CAhCY,CAiCb,GAAI,CAAA,YAAJ,EAAgB,CACd,MAAO,EAAP,CACD,CAnCY,CAoCP,gBApCO,uLAqCJ,eAAe,EArCX,iDA2CP,WA3CO,sBA2CK,OA3CL,CA2C8B,MA3C9B,4KA4CE,MAAM,CAAC,WAAP,CAAmB,OAAnB,CA5CF,0GA8CP,YA9CO,uBA8CM,MA9CN,6KA+CL,MAAM,CAAC,YAAP,EA/CK,kDAiDP,aAjDO,wBAiDO,MAjDP,8KAkDE,MAAM,CAAC,aAAP,EAlDF,0GAoDP,4BApDO,uCAoDsB,MApDtB,8IAqDN,eAAe,EArDT,2DAqDoB,EArDpB,2DAsDE,MAAM,CAAC,4BAAP,EAtDF,0GAwDP,wBAxDO,mCAwDkB,KAxDlB,CAwDiC,MAxDjC,yLAyDE,MAAM,CAAC,wBAAP,CAAgC,KAAhC,CAzDF,0GAAf","sourcesContent":["import { CapturedPicture, PictureOptions } from './Camera.types';\nimport ExponentCamera from './ExponentCamera.web';\nimport { canGetUserMedia } from './CameraModule/UserMediaManager';\n\nexport default {\n  get name(): string {\n    return 'ExponentCameraManager';\n  },\n  get Type() {\n    return {\n      back: 'back',\n      front: 'front',\n    };\n  },\n  get FlashMode() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n      torch: 'torch',\n    };\n  },\n  get AutoFocus() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n      singleShot: 'singleShot',\n    };\n  },\n  get WhiteBalance() {\n    return {\n      auto: 'auto',\n      continuous: 'continuous',\n      manual: 'manual',\n    };\n  },\n  get VideoQuality() {\n    return {};\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    return canGetUserMedia();\n  },\n\n  // TODO: Bacon: Is video possible?\n  // record(options): Promise\n  // stopRecording(): Promise<void>\n  async takePicture(options: PictureOptions, camera: ExponentCamera): Promise<CapturedPicture> {\n    return await camera.takePicture(options);\n  },\n  async pausePreview(camera: ExponentCamera): Promise<void> {\n    await camera.pausePreview();\n  },\n  async resumePreview(camera: ExponentCamera): Promise<any> {\n    return await camera.resumePreview();\n  },\n  async getAvailableCameraTypesAsync(camera: ExponentCamera): Promise<string[]> {\n    if (!canGetUserMedia()) return [];\n    return await camera.getAvailableCameraTypesAsync();\n  },\n  async getAvailablePictureSizes(ratio: string, camera: ExponentCamera): Promise<string[]> {\n    return await camera.getAvailablePictureSizes(ratio);\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}