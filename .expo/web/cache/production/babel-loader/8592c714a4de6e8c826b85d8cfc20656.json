{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import invariant from'invariant';import{CameraType,ImageType}from\"./CameraModule.types\";import{CameraTypeToFacingMode,ImageTypeFormat,MinimumConstraints}from\"./constants\";import{requestUserMediaAsync}from\"./UserMediaManager\";export function getImageSize(videoWidth,videoHeight,scale){var width=videoWidth*scale;var ratio=videoWidth/width;var height=videoHeight/ratio;return{width:width,height:height};}export function toDataURL(canvas,imageType,quality){invariant(Object.values(ImageType).includes(imageType),\"expo-camera: \"+imageType+\" is not a valid ImageType. Expected a string from: \"+Object.values(ImageType).join(', '));var format=ImageTypeFormat[imageType];if(imageType===ImageType.jpg){invariant(quality<=1&&quality>=0,\"expo-camera: \"+quality+\" is not a valid image quality. Expected a number from 0...1\");return canvas.toDataURL(format,quality);}else{return canvas.toDataURL(format);}}export function hasValidConstraints(preferredCameraType,width,height){return preferredCameraType!==undefined&&width!==undefined&&height!==undefined;}function ensureCaptureOptions(config){var captureOptions={scale:1,imageType:ImageType.png,isImageMirror:false};for(var key in config){if(key in config&&config[key]!==undefined&&key in captureOptions){captureOptions[key]=config[key];}}return captureOptions;}var DEFAULT_QUALITY=0.92;export function captureImage(video,pictureOptions){var config=ensureCaptureOptions(pictureOptions);var scale=config.scale,imageType=config.imageType,_config$quality=config.quality,quality=_config$quality===void 0?DEFAULT_QUALITY:_config$quality,isImageMirror=config.isImageMirror;var videoWidth=video.videoWidth,videoHeight=video.videoHeight;var _getImageSize=getImageSize(videoWidth,videoHeight,scale),width=_getImageSize.width,height=_getImageSize.height;var canvas=document.createElement('canvas');canvas.width=width;canvas.height=height;var context=canvas.getContext('2d');if(!context)throw new Error('Context is not defined');if(isImageMirror){context.setTransform(-1,0,0,1,canvas.width,0);}context.drawImage(video,0,0,width,height);var base64=toDataURL(canvas,imageType,quality);return base64;}function getSupportedConstraints(){if(navigator.mediaDevices&&navigator.mediaDevices.getSupportedConstraints){return navigator.mediaDevices.getSupportedConstraints();}return null;}export function getIdealConstraints(preferredCameraType,width,height){var preferredConstraints={audio:false,video:{}};if(hasValidConstraints(preferredCameraType,width,height)){return MinimumConstraints;}var supports=getSupportedConstraints();if(!supports||!supports.facingMode||!supports.width||!supports.height)return MinimumConstraints;if(preferredCameraType&&Object.values(CameraType).includes(preferredCameraType)){var facingMode=CameraTypeToFacingMode[preferredCameraType];if(isWebKit()){var key=facingMode==='user'?'exact':'ideal';preferredConstraints.video.facingMode=_defineProperty({},key,facingMode);}else{preferredConstraints.video.facingMode={ideal:CameraTypeToFacingMode[preferredCameraType]};}}if(isMediaTrackConstraints(preferredConstraints.video)){preferredConstraints.video.width=width;preferredConstraints.video.height=height;}return preferredConstraints;}function isMediaTrackConstraints(input){return input&&typeof input.video!=='boolean';}export function getStreamDevice(preferredCameraType,preferredWidth,preferredHeight){var constraints,stream;return _regeneratorRuntime.async(function getStreamDevice$(_context){while(1){switch(_context.prev=_context.next){case 0:constraints=getIdealConstraints(preferredCameraType,preferredWidth,preferredHeight);_context.next=3;return _regeneratorRuntime.awrap(requestUserMediaAsync(constraints));case 3:stream=_context.sent;return _context.abrupt(\"return\",stream);case 5:case\"end\":return _context.stop();}}});}export function isWebKit(){return /WebKit/.test(navigator.userAgent)&&!/Edg/.test(navigator.userAgent);}","map":{"version":3,"sources":["../../src/CameraModule/CameraUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-env browser */\nimport invariant from 'invariant';\n\nimport { PictureOptions } from './../Camera.types';\nimport { CameraType, CaptureOptions, ImageSize, ImageType } from './CameraModule.types';\nimport { CameraTypeToFacingMode, ImageTypeFormat, MinimumConstraints } from './constants';\nimport { requestUserMediaAsync } from './UserMediaManager';\n\ninterface ConstrainLongRange {\n  max?: number;\n  min?: number;\n  exact?: number;\n  ideal?: number;\n}\n\nexport function getImageSize(videoWidth: number, videoHeight: number, scale: number): ImageSize {\n  const width = videoWidth * scale;\n  const ratio = videoWidth / width;\n  const height = videoHeight / ratio;\n\n  return {\n    width,\n    height,\n  };\n}\n\nexport function toDataURL(\n  canvas: HTMLCanvasElement,\n  imageType: ImageType,\n  quality: number\n): string {\n  invariant(\n    Object.values(ImageType).includes(imageType),\n    `expo-camera: ${imageType} is not a valid ImageType. Expected a string from: ${Object.values(\n      ImageType\n    ).join(', ')}`\n  );\n\n  const format = ImageTypeFormat[imageType];\n  if (imageType === ImageType.jpg) {\n    invariant(\n      quality <= 1 && quality >= 0,\n      `expo-camera: ${quality} is not a valid image quality. Expected a number from 0...1`\n    );\n    return canvas.toDataURL(format, quality);\n  } else {\n    return canvas.toDataURL(format);\n  }\n}\n\nexport function hasValidConstraints(\n  preferredCameraType?: CameraType,\n  width?: number | ConstrainLongRange,\n  height?: number | ConstrainLongRange\n): boolean {\n  return preferredCameraType !== undefined && width !== undefined && height !== undefined;\n}\n\nfunction ensureCaptureOptions(config: any): CaptureOptions {\n  const captureOptions = {\n    scale: 1,\n    imageType: ImageType.png,\n    isImageMirror: false,\n  };\n\n  for (const key in config) {\n    if (key in config && config[key] !== undefined && key in captureOptions) {\n      captureOptions[key] = config[key];\n    }\n  }\n  return captureOptions;\n}\n\nconst DEFAULT_QUALITY = 0.92;\n\nexport function captureImage(video: HTMLVideoElement, pictureOptions: PictureOptions): string {\n  const config = ensureCaptureOptions(pictureOptions);\n  const { scale, imageType, quality = DEFAULT_QUALITY, isImageMirror } = config;\n\n  const { videoWidth, videoHeight } = video;\n  const { width, height } = getImageSize(videoWidth, videoHeight, scale);\n\n  // Build the canvas size and draw the camera image to the context from video\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const context = canvas.getContext('2d');\n\n  //TODO: Bacon: useless\n  if (!context) throw new Error('Context is not defined');\n  // Flip horizontally (as css transform: rotateY(180deg))\n  if (isImageMirror) {\n    context.setTransform(-1, 0, 0, 1, canvas.width, 0);\n  }\n\n  context.drawImage(video, 0, 0, width, height);\n\n  const base64 = toDataURL(canvas, imageType, quality);\n  return base64;\n}\n\nfunction getSupportedConstraints(): MediaTrackSupportedConstraints | null {\n  if (navigator.mediaDevices && navigator.mediaDevices.getSupportedConstraints) {\n    return navigator.mediaDevices.getSupportedConstraints();\n  }\n  return null;\n}\n\nexport function getIdealConstraints(\n  preferredCameraType: CameraType,\n  width?: number | ConstrainLongRange,\n  height?: number | ConstrainLongRange\n): MediaStreamConstraints {\n  let preferredConstraints: MediaStreamConstraints = {\n    audio: false,\n    video: {},\n  };\n\n  if (hasValidConstraints(preferredCameraType, width, height)) {\n    return MinimumConstraints;\n  }\n\n  const supports = getSupportedConstraints();\n  // TODO: Bacon: Test this\n  if (!supports || !supports.facingMode || !supports.width || !supports.height)\n    return MinimumConstraints;\n\n  if (preferredCameraType && Object.values(CameraType).includes(preferredCameraType)) {\n    const facingMode = CameraTypeToFacingMode[preferredCameraType];\n    if (isWebKit()) {\n      const key = facingMode === 'user' ? 'exact' : 'ideal';\n      (preferredConstraints.video as MediaTrackConstraints).facingMode = {\n        [key]: facingMode,\n      };\n    } else {\n      (preferredConstraints.video as MediaTrackConstraints).facingMode = {\n        ideal: CameraTypeToFacingMode[preferredCameraType],\n      };\n    }\n  }\n\n  if (isMediaTrackConstraints(preferredConstraints.video)) {\n    preferredConstraints.video.width = width;\n    preferredConstraints.video.height = height;\n  }\n\n  return preferredConstraints;\n}\n\nfunction isMediaTrackConstraints(input: any): input is MediaTrackConstraints {\n  return input && typeof input.video !== 'boolean';\n}\n\nexport async function getStreamDevice(\n  preferredCameraType: CameraType,\n  preferredWidth?: number | ConstrainLongRange,\n  preferredHeight?: number | ConstrainLongRange\n): Promise<MediaStream> {\n  const constraints: MediaStreamConstraints = getIdealConstraints(\n    preferredCameraType,\n    preferredWidth,\n    preferredHeight\n  );\n  const stream: MediaStream = await requestUserMediaAsync(constraints);\n  return stream;\n}\n\nexport function isWebKit(): boolean {\n  return /WebKit/.test(navigator.userAgent) && !/Edg/.test(navigator.userAgent);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}